name: 'AppImage creator'
description: 'Used to generate AppImage packages'
author: 'Emiliopg91'
branding:
  icon: activity
  color: white
inputs:
  entrypoint:
    description: 'Main executable for application'
    required: true
  name:
    description: 'Application name'
    required: true
  versioncmd:
    description: 'Command to get version'
    required: true
  icon:
    description: 'PNG icon for desktop file'
    required: true
  desktop:
    description: 'Path to desktop file'
    required: true
outputs:
  version:
    value: ${{ env.APP_VERSION }}
    description: 'Application version'
  is_update: 
    value: ${{ env.IS_UPDATE }}
    description: 'Decision if the AppImage needs to be updated'
runs:
  using: "composite"
  steps:
    - run: sudo apt-get update
      shell: bash
    - run: sudo apt-get install -y jq libfuse2
      shell: bash
    - run: pip install --upgrade certifi
      shell: bash
    - run: echo "INPUT_ENTRYPOINT=${{ inputs.entrypoint }}" >> $GITHUB_ENV
      shell: bash
    - run: echo "INPUT_NAME=${{ inputs.name }}" >> $GITHUB_ENV
      shell: bash
    - run: echo "INPUT_VERSIONCMD=${{ inputs.versioncmd }}" >> $GITHUB_ENV
      shell: bash
    - run: echo "INPUT_ICON=${{ inputs.icon }}" >> $GITHUB_ENV
      shell: bash
    - run: echo "INPUT_DESKTOP=${{ inputs.desktop }}" >> $GITHUB_ENV
      shell: bash
    - run: python3 $GITHUB_ACTION_PATH/createAppImage.py --entrypoint="${{ env.INPUT_ENTRYPOINT }}" --name="${{ env.INPUT_NAME }}" --versioncmd="${{ env.INPUT_VERSIONCMD }}" --icon="${{ env.INPUT_ICON }}" --desktop="${{ env.INPUT_DESKTOP }}"
      shell: bash
    - name: consolidate_output_update
      run: echo "is_update=${{ env.IS_UPDATE }}" >> $GITHUB_OUTPUT
    - name: consolidate_output_version
      run: echo "version=${{ env.APP_VERSION }}" >> $GITHUB_OUTPUT
      shell: bash
    - uses: actions/upload-artifact@v4
      with:
        name: appimage-files
        path: |
          ${{ env.APPIMAGE_PATH }}
          ${{ env.APPIMAGE_PATH }}.zsync
          
